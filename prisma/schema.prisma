// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Definição do modelo Insignia
model Insignia {
  Id        Int      @id @default(autoincrement())
  Descricao String
  Nome      String
  Imagem    String
  possui    Possui[]
}

// Definição do modelo Aula
model Aula {
  Id            Int             @id @default(autoincrement())
  Descricao     String
  Xp            Int?
  UrlVideo      String
  modulo        Modulo          @relation(fields: [fk_modulo_id], references: [Id])
  fk_modulo_id  Int
  feedback      Feedback[]
  materiais     Materiais[]
  Sequencia     Int
  AulaProgresso AulaProgresso[]
}

// Definição do modelo Feedback
model Feedback {
  Id         Int    @id @default(autoincrement())
  Avaliacao  Int
  Comentario String
  fk_Aula_Id Int
  aula       Aula   @relation(fields: [fk_Aula_Id], references: [Id])
}

// Definição do modelo Materiais
model Materiais {
  Id         Int    @id @default(autoincrement())
  Nome       String
  Tipo       String
  URL        String
  fk_Aula_Id Int
  aula       Aula   @relation(fields: [fk_Aula_Id], references: [Id])
}

// Definição do modelo Modulo
model Modulo {
  Id              Int               @id @default(autoincrement())
  Titulo          String
  Descricao       String
  Sequencia       Int
  curso           Curso             @relation(fields: [fkCursoId], references: [Id])
  fkCursoId       Int
  Aula            Aula[]
  ModuloProgresso ModuloProgresso[]
}

// Definição do modelo Pessoa
model Pessoa {
  Id              Int               @id @default(autoincrement())
  Nome            String
  Senha           String
  Email           String
  Tipo            String
  XP              Int               @default(10)
  Canal           String?           @default("")
  possui          Possui[]
  cursa           Cursa[]
  patente         Patente?          @relation(fields: [patenteId], references: [Id])
  patenteId       Int?              @default(1)
  AulaProgresso   AulaProgresso[]
  ModuloProgresso ModuloProgresso[]
  CursoProgresso  CursoProgresso[]
  Curso           Curso[]
}

// Definição do modelo Patente
model Patente {
  Id        Int      @id @default(autoincrement())
  Nome      String
  Imagem    String
  Descricao String
  pessoas   Pessoa[]
}

// Definição do modelo possui
model Possui {
  ID_AlunoIns    Int      @id @default(autoincrement())
  fk_Pessoa_Id   Int
  fk_Insignia_Id Int
  pessoa         Pessoa   @relation(fields: [fk_Pessoa_Id], references: [Id])
  insignia       Insignia @relation(fields: [fk_Insignia_Id], references: [Id])
}

// Definição do modelo cursa
model Cursa {
  Id           Int    @id @default(autoincrement())
  fk_Pessoa_Id Int
  fk_Curso_Id  Int
  pessoa       Pessoa @relation(fields: [fk_Pessoa_Id], references: [Id])
  curso        Curso  @relation(fields: [fk_Curso_Id], references: [Id])
}

// Definição do modelo Curso
model Curso {
  Id             Int              @id @default(autoincrement())
  Titulo         String
  Descricao      String
  CriadorId      Int
  Modulo         Modulo[]
  Cursa          Cursa[]
  CursoProgresso CursoProgresso[]
  pessoa         Pessoa           @relation(fields: [CriadorId], references: [Id])
}

model AulaProgresso {
  idAula     Int
  idPessoa   Int
  concluido  Boolean
  DataInicio DateTime
  DataFim    DateTime

  aula   Aula   @relation(fields: [idAula], references: [Id])
  pessoa Pessoa @relation(fields: [idPessoa], references: [Id])

  @@id([idAula, idPessoa])
}

model ModuloProgresso {
  idModulo   Int
  idPessoa   Int
  concluido  Boolean
  DataInicio DateTime
  DataFim    DateTime

  modulo Modulo @relation(fields: [idModulo], references: [Id])
  pessoa Pessoa @relation(fields: [idPessoa], references: [Id])

  @@id([idModulo, idPessoa])
}

model CursoProgresso {
  idCurso    Int
  idPessoa   Int
  concluido  Boolean
  DataInicio DateTime
  DataFim    DateTime

  curso  Curso  @relation(fields: [idCurso], references: [Id])
  pessoa Pessoa @relation(fields: [idPessoa], references: [Id])

  @@id([idCurso, idPessoa])
}
